{"version":3,"sources":["../index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;AACA,SAAS,WAAT,CAAqB,QAArB,EAA+B;AAC7B,MAAI,QAAQ,CAAC,MAAT,IAAmB,GAAnB,IAA0B,QAAQ,CAAC,MAAT,GAAkB,GAAhD,EAAqD;AACnD,WAAO,QAAP;AACD;;AACD,MAAM,KAAK,GAAG,IAAI,KAAJ,CAAU,QAAQ,CAAC,UAAnB,CAAd;AACA,EAAA,KAAK,CAAC,QAAN,GAAiB,QAAjB;AACA,SAAO,iBAAQ,MAAR,CAAe,KAAf,CAAP;AACD;;AAED,SAAS,KAAT,GAKE;AAAA,iFADI,EACJ;AAAA,yBAHE,MAGF;AAAA,MAHE,MAGF,4BAHW,YAAM,CAAE,CAGnB;AAAA,yBAFE,MAEF;AAAA,MAFE,MAEF,4BAFW,EAEX;;AACA,MAAI,OAAJ;AACA,SAAO;AACL,IAAA,WADK,yBACgC;AAAA,UAAzB,YAAyB,uEAAV,YAAM,CAAE,CAAE;AACnC,aAAO,SAAS,MAAT,CAAgB,MAAhB,EAAwB;AAC7B,QAAA,OAAO,GAAG,MAAV;AACA,QAAA,YAAY;AACb,OAHD;AAID,KANI;AAOL,IAAA,UAPK,wBAO8B;AAAA,UAAxB,WAAwB,uEAAV,YAAM,CAAE,CAAE;AACjC,aAAO,SAAS,KAAT,CAAe,SAAf,EAA0B;AAC/B,eAAO,SAAS,SAAT,CAAmB,QAAnB,EAA6B;AAClC,UAAA,MAAM,CAAC;AAAE,YAAA,SAAS,EAAT,SAAF;AAAa,YAAA,OAAO,EAAE,CAAC,mBAAvB;AAAmC,YAAA,OAAO,EAAP,OAAnC;AAA4C,YAAA,QAAQ,EAAE,QAAQ,CAAC,KAAT;AAAtD,WAAD,EAA2E,MAA3E,CAAN;AACA,iBAAO,WAAW,CAAC,QAAD,CAAlB;AACD,SAHD;AAID,OALD;AAMD;AAdI,GAAP;AAgBD;;AAEc,SAAS,iBAAT,CAA2B,QAA3B,EAAuD;AAAA,MAAlB,WAAkB,uEAAJ,EAAI;AACpE,MAAM,WAAW,GAAG,QAAQ,CAAC,KAA7B;;AAEA,EAAA,QAAQ,CAAC,KAAT,GAAiB,SAAS,UAAT,CAAoB,OAApB,EAA6B;AAAA,iBACR,KAAK,CAAC,WAAD,CADG;AAAA,QACpC,WADoC,UACpC,WADoC;AAAA,QACvB,UADuB,UACvB,UADuB;;AAG5C,WAAO,WAAW,CAAC,IAAZ,iCACF,IADE;AAEL,MAAA,MAAM,EAAE,WAAW,CAAC,KAAK,MAAN,CAFd;AAGL,MAAA,WAAW,EAAE,UAAU,CAAC,KAAK,WAAL,IAAoB,WAArB,CAAV,CAA4C,CAAC,mBAA7C;AAHR,QAIJ,OAJI,CAAP;AAKD,GARD;;AAUA,SAAO,QAAP;AACD","file":"index.js","sourcesContent":["\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n  const error = new Error(response.statusText);\n  error.response = response;\n  return Promise.reject(error);\n}\n\nfunction watch(\n  {\n    parser = () => {},\n    config = {},\n  } = {}\n) {\n  let request;\n  return {\n    watchBefore(originBefore = () => {}) {\n      return function before(option) {\n        request = option;\n        originBefore();\n      };\n    },\n    watchAfter(originAfter = () => {}) {\n      return function after(startTime) {\n        return function parseData(response) {\n          parser({ startTime, endTime: +Date.now(), request, response: response.clone() }, config);\n          return originAfter(response);\n        };\n      };\n    },\n  };\n}\n\nexport default function watchBrowserFetch(fetchApi, watchConfig = {}) {\n  const originFetch = fetchApi.fetch;\n  \n  fetchApi.fetch = function watchFetch(options) {\n    const { watchBefore, watchAfter } = watch(watchConfig);\n    \n    return originFetch.call({\n      ...this,\n      before: watchBefore(this.before),\n      checkStatus: watchAfter(this.checkStatus || checkStatus)(+Date.now()),\n    }, options);\n  };\n  \n  return fetchApi;\n}\n"]}