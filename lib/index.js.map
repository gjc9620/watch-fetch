{"version":3,"sources":["../index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;AACA,SAAS,WAAT,CAAqB,QAArB,EAA+B;AAC7B,MAAI,QAAQ,CAAC,MAAT,IAAmB,GAAnB,IAA0B,QAAQ,CAAC,MAAT,GAAkB,GAAhD,EAAqD;AACnD,WAAO,QAAP;AACD;;AACD,MAAM,KAAK,GAAG,IAAI,KAAJ,CAAU,QAAQ,CAAC,UAAnB,CAAd;AACA,EAAA,KAAK,CAAC,QAAN,GAAiB,QAAjB;AACA,SAAO,iBAAQ,MAAR,CAAe,KAAf,CAAP;AACD;;AAGD,SAAS,KAAT,GAKE;AAAA,iFADI,EACJ;AAAA,yBAHE,MAGF;AAAA,MAHE,MAGF,4BAHW,YAAM,CAAE,CAGnB;AAAA,yBAFE,MAEF;AAAA,MAFE,MAEF,4BAFW,EAEX;;AACA,MAAI,WAAJ;AACA,MAAI,OAAJ;AACA,SAAO;AACL,IAAA,WADK,yBACgC;AAAA,UAAzB,YAAyB,uEAAV,YAAM,CAAE,CAAE;AACnC,aAAO,SAAS,MAAT,CAAgB,MAAhB,EAAwB;AAC7B,QAAA,WAAW,GAAG,MAAd;AACA,QAAA,YAAY;AACb,OAHD;AAID,KANI;AAOL,IAAA,UAPK,wBAO8B;AAAA,UAAxB,WAAwB,uEAAV,YAAM,CAAE,CAAE;AACjC,aAAO,SAAS,SAAT,CAAmB,GAAnB,EAAwB,MAAxB,EAAgC;AACrC,QAAA,OAAO,GAAG;AAAE,UAAA,GAAG,EAAH,GAAF;AAAO,UAAA,MAAM,EAAN;AAAP,SAAV;AACA,eAAO,WAAW,EAAlB;AACD,OAHD;AAID,KAZI;AAaL,IAAA,UAbK,wBAa8B;AAAA,UAAxB,WAAwB,uEAAV,YAAM,CAAE,CAAE;AACjC,aAAO,SAAS,KAAT,CAAe,SAAf,EAA0B;AAC/B,eAAO,SAAS,SAAT,CAAmB,QAAnB,EAA6B;AAClC,UAAA,MAAM,CAAC;AACL,YAAA,SAAS,EAAT,SADK;AAEL,YAAA,OAAO,EAAE,CAAC,mBAFL;AAGL,YAAA,WAAW,EAAX,WAHK;AAIL,YAAA,OAAO,EAAP,OAJK;AAKL,YAAA,QAAQ,EAAE,QAAQ,CAAC,KAAT;AALL,WAAD,EAMH,MANG,CAAN;AAQA,iBAAO,WAAW,CAAC,QAAD,CAAlB;AACD,SAVD;AAWD,OAZD;AAaD;AA3BI,GAAP;AA6BD;;AAIc,SAAS,iBAAT,CAA2B,QAA3B,EAAuD;AAAA,MAAlB,WAAkB,uEAAJ,EAAI;AAAA,MAC5D,KAD4D,GAClD,QADkD,CAC5D,KAD4D;;AAGpE,EAAA,QAAQ,CAAC,KAAT,GAAiB,SAAS,UAAT,CAAoB,OAApB,EAA6B;AAAA,iBACI,KAAK,CAAC,WAAD,CADT;AAAA,QACpC,WADoC,UACpC,WADoC;AAAA,QACvB,UADuB,UACvB,UADuB;AAAA,QACX,UADW,UACX,UADW;;AAG5C,WAAO,KAAK,CAAC,IAAN,iCACF,IADE;AAEL,MAAA,MAAM,EAAE,WAAW,CAAC,KAAK,MAAN,CAFd;AAGL,MAAA,KAAK,EAAE,UAAU,CAAC,KAAK,KAAN,CAHZ;AAIL,MAAA,WAAW,EAAE,UAAU,CAAC,KAAK,WAAL,IAAoB,WAArB,CAAV,CAA4C,CAAC,mBAA7C;AAJR,QAKJ,OALI,CAAP;AAMD,GATD;;AAYA,SAAO,QAAP;AACD","file":"index.js","sourcesContent":["\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n  const error = new Error(response.statusText);\n  error.response = response;\n  return Promise.reject(error);\n}\n\n\nfunction watch(\n  {\n    parser = () => {},\n    config = {},\n  } = {}\n) {\n  let fetchOption;\n  let request;\n  return {\n    watchBefore(originBefore = () => {}) {\n      return function before(option) {\n        fetchOption = option;\n        originBefore();\n      };\n    },\n    watchCache(originCache = () => {}) {\n      return function hackCache(url, option) {\n        request = { url, option };\n        return originCache();\n      };\n    },\n    watchAfter(originAfter = () => {}) {\n      return function after(startTime) {\n        return function parseData(response) {\n          parser({\n            startTime,\n            endTime: +Date.now(),\n            fetchOption,\n            request,\n            response: response.clone(),\n          }, config);\n          \n          return originAfter(response);\n        };\n      };\n    },\n  };\n}\n\n\n\nexport default function watchBrowserFetch(fetchApi, watchConfig = {}) {\n  const { fetch } = fetchApi;\n  \n  fetchApi.fetch = function watchFetch(options) {\n    const { watchBefore, watchAfter, watchCache } = watch(watchConfig);\n    \n    return fetch.call({\n      ...this,\n      before: watchBefore(this.before),\n      cache: watchCache(this.cache),\n      checkStatus: watchAfter(this.checkStatus || checkStatus)(+Date.now()),\n    }, options);\n  };\n  \n  \n  return fetchApi;\n}\n"]}